openapi: '3.0.2'
info:
  title: MICRO SERVICES CURD OPERATIONS
  version: '1.0'
servers:
  - url: http://localhost:8000


paths:
  /createTask:
    post:
      tags:
        - Task
      description: Task Create
      operationId: TaskCreate
      responses:
        '201':
          description: TaskCreate Sucessfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: TaskCreateFailure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      requestBody:
        description: TaskCreate
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskData'
  /getTasks:
    get:
      tags:
        - Task
      description:  GetTask
      operationId: GetTask
      responses:
        '201':
          description: GetTask Sucessfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskData'
        '400':
          description: GetTask Failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /CreateQuestions:
    post:
      tags:
        - Task
      description:  CreateQuestions
      operationId: CreateQuestions
      responses:
        '201':
          description:  CreateQuestions Sucessfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: CreateQuestions Failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      requestBody:
        description: CreateQuestions
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuestionData'
  /GetQuestions/{topicid}:
    get:
      tags:
        - Task
      parameters:
        - name: topicid
          in: path
          description: getQuestion
          schema:
            type: string
      responses:
        '201':
          description: GetQuestion Sucessfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/QuestionData'
        '400':
          description: GetQuestion Failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /PostAnswer:
    post:
      tags:
        - Task
      description: Answer Create
      operationId: Answer Create
      responses:
        '201':
          description: AnswerCreate Sucessfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: AnswerCreateFailure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      requestBody:
        description: AnswerCreate
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnswerData'
  /GetAnswers:
    get:
      tags:
        - Task
      description: Get Answer
      operationId: Get Answer
      responses:
        "200":
          description: Get Answers Sucessfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AnswerData"
        "400":
          description: Get Answer Failure
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse" 
  /Answer/{QuestionId}:
    get:
      tags:
        - Task
      description: Get Answer
      operationId: Get Answer
      parameters:
        - name: QuestionId
          in: query
          description: QuestionId
          schema:
            type: string
      responses:
        "200":
          description: Get Answer Sucesss
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AnswerData"
        "400":
          description: Get Answer Failure
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
components:
  schemas:
    ApiResponse:
      type: object
      description:  ResponseInStatusCode
      properties:
        code: 
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string    
          
    TaskData:
      type: object
      properties:
        id:
          type: string
        topic:
          type: string
    QuestionData:
      type: object
      properties:
        id:
          type: string
        topicid:
          type: string
        question:
          type: string
        optionA:
          type: string
        optionB:
          type: string
        optionC:
          type: string
        optionD:
          type: string
        QuestionId:
          type: string
    AnswerData:
      type: object
      properties:
        QuestionId:
          type: string
        answer:
          type: string